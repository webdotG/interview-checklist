import {
  getAuth,
  signInWithPopup,
  GithubAuthProvider,
  signOut,
  onAuthStateChanged,
  setPersistence,
  browserLocalPersistence,
} from 'https://www.gstatic.com/firebasejs/10.7.1/firebase-auth.js'

export class AuthService {
  constructor(auth) {
    this.auth = auth
    this.provider = new GithubAuthProvider()
    // –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–ª–±—ç–∫–∞ AUTH
    this.onAuthStateChangedCallback = () => {}

    // üí° –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–º–µ–Ω –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞.
    // –≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã Firebase –∑–Ω–∞–ª, –∫—É–¥–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    // –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å GitHub. –ï—Å–ª–∏ —ç—Ç–æ–≥–æ –Ω–µ —Å–¥–µ–ª–∞—Ç—å, –æ–Ω –±—É–¥–µ—Ç
    // –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–æ–º–µ–Ω firebaseapp.com, —á—Ç–æ –≤—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É 404.
    this.provider.setCustomParameters({
      redirect_uri: 'https://webdotg.github.io/interview-checklist/',
    })

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–∞ —Å–µ—Å—Å–∏–∏ –≤ localStorage.
    setPersistence(this.auth, browserLocalPersistence)
      .then(() => {
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.
        onAuthStateChanged(this.auth, (user) => {
          // –í—ã–∑–æ–≤ –∫–æ–ª–±—ç–∫–∞
          this.onAuthStateChangedCallback(user)
          if (user) {
            console.log(
              '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:',
              user.displayName || user.email,
            )
          } else {
            console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω.')
          }
        })
      })
      .catch((error) => {
        console.error('–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–∞ —Å–µ—Å—Å–∏–∏:', error)
      })
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–ª–±—ç–∫–∞
  setOnAuthStateChangedCallback(callback) {
    this.onAuthStateChangedCallback = callback
  }

  // –í—Ö–æ–¥ —á–µ—Ä–µ–∑ popup (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞)
  async signInWithGitHub() {
    try {
      const result = await signInWithPopup(this.auth, this.provider)
      const user = result.user
      console.log('–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ GitHub:', user.displayName || user.email)
      return user
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ GitHub:', error)
      console.error('Error code:', error.code)
      console.error('Error message:', error.message)
      return null
    }
  }

  // –í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
  async signOut() {
    try {
      if (this.auth) {
        await signOut(this.auth)
        console.log('–í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ')
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:', error)
    }
  }

  getCurrentUser() {
    return this.auth ? this.auth.currentUser : null
  }
}
