Скрипт на чиле

Dockerfile для Node.js

mkdir docker-node-safe
cd docker-node-safe
nano Dockerfile

# Используем официальный образ Node.js
FROM node:lts-bookworm-slim

# Создаём непривилегированного пользователя
RUN useradd -m -u 1000 -s /bin/bash nodeuser && \
    mkdir -p /home/nodeuser/app && \
    chown -R nodeuser:nodeuser /home/nodeuser

# Переключаемся на этого пользователя
USER nodeuser
WORKDIR /home/nodeuser/app

# Команда для запуска скриптов
# Будем запускать её вручную через скрипт-обёртку
CMD ["/bin/bash"]


скрипта-обёртки для запуска "run-script-safely.sh"
nano run-script-safely.sh


#!/bin/bash

# Создаём изолированную сеть (если ещё не создана)
# Это нужно для того, чтобы скрипт не мог обращаться к вашей локальной сети
docker network create --driver bridge --internal isolated_net 2>/dev/null || true

# Проверяем, что скрипт передан как аргумент
if [ -z "$1" ]; then
    echo "Ошибка: Не указан скрипт для запуска."
    echo "Использование: ./run-script-safely.sh <путь_к_файлу.js>"
    exit 1
fi

# Проверяем, что файл существует
if [ ! -f "$1" ]; then
    echo "Ошибка: Файл '$1' не найден."
    exit 1
fi

echo "Запуск скрипта $1 в изолированном Docker-контейнере..."

docker run --rm -it \
  --network isolated_net \
  --memory 512m \
  --cpus 0.5 \
  --pids-limit 50 \
  --ipc none \
  --pid host \
  --cap-drop=ALL \
  --security-opt no-new-privileges \
  --security-opt seccomp=unconfined \
  --read-only \
  \
  # Монтируем файл скрипта в контейнер, но только как для чтения
  -v "$1:/home/nodeuser/app/script.js:ro" \
  \
  # Запускаем Node.js
  node-safe \
  node script.js

echo "Контейнер завершен."

Билд
docker build -t node-safe .

Исполняем
chmod +x run-script-safely.sh

Запустить скрипт указав путь к нему.
./run-script-safely.sh /путь/к/вашей/папке/SOMESCRIPT.js
