import { db } from './db.service.js'
import { AuthService } from './auth.service.js'
import { AuthUI } from './auth.ui.js'
import { NotificationService } from './notification.service.js'
import { InterviewManager } from './interview.manager.js'
import { FormValidator } from './form.validator.js'
import { renderQuestions } from './questions.renderer.js'
import { questionUtils } from './questions.stats.js'
import { questionsData } from './questions.data.js'
import { InterviewsViewer } from './interviews.viewer.js'
import { InterviewFilters } from './interview.filters.js'

const isGitHubPages = window.location.hostname.includes('github.io')

export async function initializeApp() {
  try {
    const { auth } = await db.init()
    const authService = new AuthService(auth)
    // üí° –≠–¢–û –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–´–ô –®–ê–ì
    // –¢–ï–°–¢
    authService.provider.setCustomParameters({
      redirect_uri: 'https://webdotg.github.io/interview-checklist/',
    })
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –ª–∏ –º—ã –ø–æ—Å–ª–µ redirect –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    // if (authService.isReturningFromRedirect()) {
    //   console.log('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–∑–≤—Ä–∞—Ç –ø–æ—Å–ª–µ redirect –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...')
    //   // –§–ª–∞–≥ –±—É–¥–µ—Ç –æ—á–∏—â–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ getRedirectResult –≤ initAuth
    //   setTimeout(() => {
    //     authService.clearRedirectFlag()
    //   }, 2000)
    // }

    const manager = new InterviewManager()
    await manager.init()
    manager.loadFromURL()

    const notificationService = new NotificationService()

    // AuthUI –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const authUI = new AuthUI(
      authService,
      notificationService,
      manager,
      isGitHubPages,
    )

    const formValidator = new FormValidator()
    formValidator.init('#interview-form')

    questionUtils.addCounterToHeader(questionsData)
    await renderQuestions()

    const stats = questionUtils.getDetailedStats(questionsData)

    // AuthUI —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    authUI.setupEventListeners()
    // UI –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ onAuthStateChanged

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    authService.setOnAuthStateChangedCallback((user) => {
      if (user) {
        const displayName = authService.getUserDisplayName()
        notificationService.show(
          `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${displayName}!`,
          'success',
          3000,
        )
      }
    })

    notificationService.show('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ', 'success', 2000)
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error)
    const notificationService = new NotificationService()
    notificationService.show('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', 'error', 5000)
  }
}

export async function initializeInterviewsPage() {
  try {
    const { auth, firestore } = await db.init()
    const authService = new AuthService(auth)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º redirect –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–Ω—Ç–µ—Ä–≤—å—é
    // if (authService.isReturningFromRedirect()) {
    //   console.log('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–∑–≤—Ä–∞—Ç –ø–æ—Å–ª–µ redirect –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–Ω—Ç–µ—Ä–≤—å—é...')
    //   setTimeout(() => {
    //     authService.clearRedirectFlag()
    //   }, 2000)
    // }

    const notificationService = new NotificationService()
    const filters = new InterviewFilters()
    const viewer = new InterviewsViewer()
    // InterviewManager –∑–¥–µ—Å—å –Ω–µ –Ω—É–∂–µ–Ω.

    // AuthUI –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–Ω—Ç–µ—Ä–≤—å—é
    const authUI = new AuthUI(
      authService,
      notificationService,
      null, // manager –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      isGitHubPages,
    )
    authUI.setupEventListeners()
    // UI –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ onAuthStateChanged

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    authService.setOnAuthStateChangedCallback((user) => {
      if (user) {
        const displayName = authService.getUserDisplayName()
        notificationService.show(
          `–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ ${displayName}`,
          'success',
          3000,
        )
      } else {
        notificationService.show(
          '–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è',
          'warning',
          4000,
        )
      }
    })

    // –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è viewer
    viewer.setDependencies({
      authService,
      notificationService,
      firestore,
      isGitHubPages,
      db,
      filters,
      authUI,
    })

    await viewer.init()

    notificationService.show('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä–≤—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞', 'success', 2000)
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–Ω—Ç–µ—Ä–≤—å—é:', error)
    const notificationService = new NotificationService()
    notificationService.show('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–Ω—Ç–µ—Ä–≤—å—é', 'error', 5000)
  }
}

// –∫–∞–∫—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
export async function initializeCurrentPage() {
  const currentPage = window.location.pathname

  if (currentPage.includes('interviews.html')) {
    await initializeInterviewsPage()
  } else {
    await initializeApp()
  }
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.addEventListener('load', () => {
  console.log('=== –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞ ===')
  console.log('User Agent:', navigator.userAgent)
  console.log('Popup support:', !navigator.userAgent.includes('Mobile'))
  console.log('Local Storage support:', !!window.localStorage)
  console.log('Current URL:', window.location.href)
  console.log('Referrer:', document.referrer)

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ popup –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  try {
    const popup = window.open('', '_blank', 'width=1,height=1')
    if (popup && !popup.closed) {
      console.log('Popup –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω')
      popup.close()
    } else {
      console.log('Popup –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –±—Ä–∞—É–∑–µ—Ä–æ–º')
    }
  } catch (e) {
    console.log('Popup –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (–∏—Å–∫–ª—é—á–µ–Ω–∏–µ):', e.message)
  }
})
